2020-09-01 13:55:58,005 ERROR: Exception on /user/marta [GET] [in c:\matea\microblog\venv\lib\site-packages\flask\app.py:1891]
Traceback (most recent call last):
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\matea\microblog\venv\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 1947, in full_dispatch_request
    rv = self.preprocess_request()
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 2241, in preprocess_request
    rv = func()
  File "C:\matea\microblog\app\routes.py", line 23, in before_request
    if current_user.is_authenticated:
  File "c:\matea\microblog\venv\lib\site-packages\werkzeug\local.py", line 348, in __getattr__
    return getattr(self._get_current_object(), name)
  File "c:\matea\microblog\venv\lib\site-packages\werkzeug\local.py", line 307, in _get_current_object
    return self.__local()
  File "c:\matea\microblog\venv\lib\site-packages\flask_login\utils.py", line 26, in <lambda>
    current_user = LocalProxy(lambda: _get_user())
  File "c:\matea\microblog\venv\lib\site-packages\flask_login\utils.py", line 346, in _get_user
    current_app.login_manager._load_user()
  File "c:\matea\microblog\venv\lib\site-packages\flask_login\login_manager.py", line 318, in _load_user
    user = self._user_callback(user_id)
  File "C:\matea\microblog\app\models.py", line 21, in load_user
    return User.query.get(int(id))
  File "c:\matea\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 512, in __get__
    mapper = orm.class_mapper(type)
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\base.py", line 451, in class_mapper
    mapper = _inspect_mapped_class(class_, configure=configure)
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\base.py", line 430, in _inspect_mapped_class
    mapper._configure_all()
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 1353, in _configure_all
    configure_mappers()
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 3301, in configure_mappers
    mapper._post_configure_properties()
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 1966, in _post_configure_properties
    prop.init()
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\interfaces.py", line 197, in init
    self.do_init()
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 2076, in do_init
    self._process_dependent_arguments()
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 2138, in _process_dependent_arguments
    self.target = self.entity.persist_selectable
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\util\langhelpers.py", line 883, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\relationships.py", line 2043, in entity
    argument = self.argument()
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\ext\declarative\clsregistry.py", line 311, in _resolve_name
    rval = d[token]
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\util\_collections.py", line 729, in __missing__
    self[key] = val = self.creator(key)
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\ext\declarative\clsregistry.py", line 273, in _access_cls
    return _determine_container(key, cls._decl_class_registry[key])
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\ext\declarative\clsregistry.py", line 257, in _determine_container
    value = value.attempt_get([], key)
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\ext\declarative\clsregistry.py", line 97, in attempt_get
    % (".".join(path + [key]))
sqlalchemy.exc.InvalidRequestError: Multiple classes found for path "User" in the registry of this declarative base. Please use a fully module-qualified path.
2020-09-01 13:55:58,155 ERROR: Exception on /favicon.ico [GET] [in c:\matea\microblog\venv\lib\site-packages\flask\app.py:1891]
Traceback (most recent call last):
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "c:\matea\microblog\venv\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 1947, in full_dispatch_request
    rv = self.preprocess_request()
  File "c:\matea\microblog\venv\lib\site-packages\flask\app.py", line 2241, in preprocess_request
    rv = func()
  File "C:\matea\microblog\app\routes.py", line 23, in before_request
    if current_user.is_authenticated:
  File "c:\matea\microblog\venv\lib\site-packages\werkzeug\local.py", line 348, in __getattr__
    return getattr(self._get_current_object(), name)
  File "c:\matea\microblog\venv\lib\site-packages\werkzeug\local.py", line 307, in _get_current_object
    return self.__local()
  File "c:\matea\microblog\venv\lib\site-packages\flask_login\utils.py", line 26, in <lambda>
    current_user = LocalProxy(lambda: _get_user())
  File "c:\matea\microblog\venv\lib\site-packages\flask_login\utils.py", line 346, in _get_user
    current_app.login_manager._load_user()
  File "c:\matea\microblog\venv\lib\site-packages\flask_login\login_manager.py", line 318, in _load_user
    user = self._user_callback(user_id)
  File "C:\matea\microblog\app\models.py", line 21, in load_user
    return User.query.get(int(id))
  File "c:\matea\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 512, in __get__
    mapper = orm.class_mapper(type)
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\base.py", line 451, in class_mapper
    mapper = _inspect_mapped_class(class_, configure=configure)
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\base.py", line 430, in _inspect_mapped_class
    mapper._configure_all()
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 1353, in _configure_all
    configure_mappers()
  File "c:\matea\microblog\venv\lib\site-packages\sqlalchemy\orm\mapper.py", line 3297, in configure_mappers
    raise e
sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'mapped class User->user'. Original exception was: Multiple classes found for path "User" in the registry of this declarative base. Please use a fully module-qualified path.
2020-09-01 14:23:30,909 INFO: Microblog startup [in C:\matea\microblog\app\__init__.py:51]
